/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cmd.novo.telas;

import cmd.controle.ConstrucaoControle;
import cmd.entidade.Construcao;
import cmd.entidade.Forro;
import cmd.entidade.Parede;
import java.awt.Color;
import java.math.BigDecimal;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.scene.control.Alert;
import javafx.scene.control.RadioButton;
import javafx.scene.control.Toggle;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class TConstrucao extends javax.swing.JInternalFrame {

    public static TConstrucao construcaoT;

    private ConstrucaoControle controle;

    public static TConstrucao getInstancia() {
        if (construcaoT == null) {
            construcaoT = new TConstrucao();
        }
        return construcaoT;
    }

    /**
     * Creates new form ConstrucaoT
     */
    public TConstrucao() {
        initComponents();
        getContentPane().setBackground(Color.WHITE);
        pnl_encontra.setBackground(Color.WHITE);
        pnl_protecao.setBackground(Color.WHITE);
        pnl_tipo.setBackground(Color.WHITE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        pnl_encontra = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        btn_procurar = new javax.swing.JButton();
        txt_descricao = new javax.swing.JTextField();
        txt_qualidade = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_detalhes = new javax.swing.JTextArea();
        txt_montante = new javax.swing.JTextField();
        txt_alturaLim = new javax.swing.JTextField();
        btn_salvar = new javax.swing.JButton();
        btn_alterar = new javax.swing.JButton();
        btn_excluir = new javax.swing.JButton();
        btn_limpar = new javax.swing.JButton();
        btn_sair = new javax.swing.JButton();
        pnl_tipo = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        op_parede = new javax.swing.JRadioButton();
        op_forro = new javax.swing.JRadioButton();
        pnl_protecao = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        chk_st = new javax.swing.JCheckBox();
        chk_ru = new javax.swing.JCheckBox();
        chk_rf = new javax.swing.JCheckBox();
        img_construcao = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Cadastro da Construção");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Construções");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Descrição:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Detalhes:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Qualidade:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Exclusivo para paredes");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Montante:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Altura limite:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("ID da construção:");

        txt_id.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btn_procurar.setBackground(new java.awt.Color(153, 153, 255));
        btn_procurar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_procurar.setText("Procurar construção");
        btn_procurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_procurarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_encontraLayout = new javax.swing.GroupLayout(pnl_encontra);
        pnl_encontra.setLayout(pnl_encontraLayout);
        pnl_encontraLayout.setHorizontalGroup(
            pnl_encontraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_encontraLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 122, Short.MAX_VALUE)
                .addComponent(btn_procurar)
                .addGap(56, 56, 56))
        );
        pnl_encontraLayout.setVerticalGroup(
            pnl_encontraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_encontraLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(pnl_encontraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_procurar))
                .addGap(16, 16, 16))
        );

        txt_descricao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txt_qualidade.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txt_detalhes.setColumns(20);
        txt_detalhes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_detalhes.setRows(5);
        jScrollPane1.setViewportView(txt_detalhes);

        txt_montante.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txt_alturaLim.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btn_salvar.setBackground(new java.awt.Color(153, 153, 255));
        btn_salvar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_salvar.setText("Salvar");
        btn_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salvarActionPerformed(evt);
            }
        });

        btn_alterar.setBackground(new java.awt.Color(153, 153, 255));
        btn_alterar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_alterar.setText("Alterar");
        btn_alterar.setEnabled(false);
        btn_alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_alterarActionPerformed(evt);
            }
        });

        btn_excluir.setBackground(new java.awt.Color(153, 153, 255));
        btn_excluir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_excluir.setText("Excluir");
        btn_excluir.setEnabled(false);
        btn_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excluirActionPerformed(evt);
            }
        });

        btn_limpar.setBackground(new java.awt.Color(153, 153, 255));
        btn_limpar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_limpar.setText("Limpar");
        btn_limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limparActionPerformed(evt);
            }
        });

        btn_sair.setBackground(new java.awt.Color(153, 153, 255));
        btn_sair.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_sair.setText("Sair");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Tipo de construção:");

        op_parede.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        op_parede.setText("Parede");

        op_forro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        op_forro.setText("Forro");

        javax.swing.GroupLayout pnl_tipoLayout = new javax.swing.GroupLayout(pnl_tipo);
        pnl_tipo.setLayout(pnl_tipoLayout);
        pnl_tipoLayout.setHorizontalGroup(
            pnl_tipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_tipoLayout.createSequentialGroup()
                .addComponent(jLabel7)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnl_tipoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_tipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(op_parede)
                    .addComponent(op_forro))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_tipoLayout.setVerticalGroup(
            pnl_tipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_tipoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(op_parede)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(op_forro)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Proteções:");

        chk_st.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chk_st.setText("ST");
        chk_st.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_stActionPerformed(evt);
            }
        });

        chk_ru.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chk_ru.setText("RU");

        chk_rf.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chk_rf.setText("RF");

        javax.swing.GroupLayout pnl_protecaoLayout = new javax.swing.GroupLayout(pnl_protecao);
        pnl_protecao.setLayout(pnl_protecaoLayout);
        pnl_protecaoLayout.setHorizontalGroup(
            pnl_protecaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_protecaoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnl_protecaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_protecaoLayout.createSequentialGroup()
                        .addComponent(chk_st)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chk_ru)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chk_rf))
                    .addComponent(jLabel6)))
        );
        pnl_protecaoLayout.setVerticalGroup(
            pnl_protecaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_protecaoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl_protecaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chk_st)
                    .addComponent(chk_ru)
                    .addComponent(chk_rf)))
        );

        img_construcao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cmd/imagens/construcao.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_montante)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txt_alturaLim, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(84, 84, 84))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(pnl_encontra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 84, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(pnl_protecao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane1)
                                            .addComponent(txt_descricao)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_qualidade, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pnl_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(img_construcao, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)))
                        .addGap(84, 84, 84))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btn_salvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_alterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_excluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_limpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_sair)
                        .addGap(21, 21, 21))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(pnl_encontra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_descricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_qualidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnl_protecao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnl_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 14, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(img_construcao)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txt_montante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txt_alturaLim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_salvar)
                    .addComponent(btn_alterar)
                    .addComponent(btn_excluir)
                    .addComponent(btn_limpar)
                    .addComponent(btn_sair))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chk_stActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_stActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chk_stActionPerformed

    private void btn_procurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_procurarActionPerformed
        //Retorna, caso o campo esteja inválido ou não foi encontrado construção
        if (!validarCodigo()) {
            return;
        }
        //Criação dos objetos
        Construcao co = null;
        Forro fo;
        Parede pa;
        //Busca da construção
        fo = controle.buscarForro(txt_id.getText());
        pa = controle.buscarParede(txt_id.getText());
        //Caso forro
        if (fo != null) {
            chk_rf.setSelected(fo.getEhRf());
            chk_ru.setSelected(fo.getEhRu());
            chk_st.setSelected(fo.getEhSt());
            co = fo.getConstrucao();
            //Caso parede
        } else if (pa != null) {
            txt_montante.setText(pa.getMontante().toString());
            txt_alturaLim.setText(pa.getAlturaLimite().toString());
            chk_rf.setSelected(pa.getEhRf());
            chk_ru.setSelected(pa.getEhRu());
            chk_st.setSelected(pa.getEhSt());
            co = pa.getConstrucao();
        }
        //Construção
        if (co != null) {
            co.setCodConstrucao(Integer.parseInt(txt_id.getText()));
            txt_descricao.setText(co.getDescricao());
            txt_detalhes.setText(co.getDetalhes());
            txt_qualidade.setText(co.getQualidade().toString());
        }
        //Habilita exclusão e alteração
        habilitarAlteravel(true);
    }//GEN-LAST:event_btn_procurarActionPerformed

    private void btn_alterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_alterarActionPerformed

        boolean res; //Resultado da ação
        String info; //Texto informativo
        //Retorna, caso os campos estejam inválidos
        if (!validarCampos()) {
            return;
        }
        //Criação dos objetos
        Construcao co;
        Forro fo;
        Parede pa;
        //Construção
        co = new Construcao();
        co.setDescricao(txt_descricao.getText());
        co.setDetalhes(txt_detalhes.getText());
        co.setQualidade(Integer.parseInt(txt_qualidade.getText()));
        co.setXdead(Boolean.FALSE);
// co.setItems(null);//Retirado da erro em relação as atualizações das classes de entidade
        co.setMaterials(null);
        //Caso forro
        if (op_forro.isSelected()) {
            fo = new Forro();
            fo.setEhRf(chk_rf.isSelected());
            fo.setEhRu(chk_ru.isSelected());
            fo.setEhSt(chk_st.isSelected());
            fo.setXdead(Boolean.FALSE);
            fo.setConstrucao(co);
            co.setForro(fo);
            co.setParede(null);
            //Inserção de forro
            res = controle.inserirForro(fo);
            //Caso parede
        } else {
            pa = new Parede();
            pa.setMontante(BigDecimal.valueOf(Double.parseDouble(txt_montante.getText())));
            pa.setAlturaLimite(BigDecimal.valueOf(Double.parseDouble(txt_alturaLim.getText())));
            pa.setEhRf(chk_rf.isSelected());
            pa.setEhRu(chk_ru.isSelected());
            pa.setEhSt(chk_st.isSelected());
            pa.setXdead(Boolean.FALSE);
            pa.setConstrucao(co);
            co.setParede(pa);
            co.setForro(null);
            //Inserção de parede
            res = controle.inserirParede(pa);
        }
        //Resultado
        if (res) {
            info = "Construção salva com sucesso";
        } else {
            info = "Não foi possível salvar construção";
        }
        exibirAlerta(info);
        //Volta ao estado inicial
        if (res) {
            resetarCampos();
        }
    }//GEN-LAST:event_btn_alterarActionPerformed

    private void btn_limparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limparActionPerformed
        resetarCampos();
    }//GEN-LAST:event_btn_limparActionPerformed

    private void btn_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvarActionPerformed
        boolean res; //Resultado da ação
        String info; //Texto informativo
        //Retorna, caso os campos estejam inválidos
        if (!validarCampos()) {
            return;
        }
        //Criação dos objetos
        Construcao co;
        Forro fo;
        Parede pa;
        //Construção
        co = new Construcao();
        co.setDescricao(txt_descricao.getText());
        co.setDetalhes(txt_detalhes.getText());
        co.setQualidade(Integer.parseInt(txt_qualidade.getText()));
        co.setXdead(Boolean.FALSE);
// co.setItems(null);//Retirado da erro em relação as atualizações das classes de entidade
        co.setMaterials(null);
        //Caso forro
        if (op_forro.isSelected()) {
            fo = new Forro();
            fo.setEhRf(chk_rf.isSelected());
            fo.setEhRu(chk_ru.isSelected());
            fo.setEhSt(chk_st.isSelected());
            fo.setXdead(Boolean.FALSE);
            fo.setConstrucao(co);
            co.setForro(fo);
            co.setParede(null);
            //Inserção de forro
            res = controle.inserirForro(fo);
            //Caso parede
        } else {
            pa = new Parede();
            pa.setMontante(BigDecimal.valueOf(Double.parseDouble(txt_montante.getText())));
            pa.setAlturaLimite(BigDecimal.valueOf(Double.parseDouble(txt_alturaLim.getText())));
            pa.setEhRf(chk_rf.isSelected());
            pa.setEhRu(chk_ru.isSelected());
            pa.setEhSt(chk_st.isSelected());
            pa.setXdead(Boolean.FALSE);
            pa.setConstrucao(co);
            co.setParede(pa);
            co.setForro(null);
            //Inserção de parede
            res = controle.inserirParede(pa);
        }
        //Resultado
        if (res) {
            info = "Construção salva com sucesso";
        } else {
            info = "Não foi possível salvar construção";
        }
        exibirAlerta(info);
        //Volta ao estado inicial
        if (res) {
            resetarCampos();
        }
    }//GEN-LAST:event_btn_salvarActionPerformed

    private void btn_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excluirActionPerformed
        boolean res; //Resultado da ação
        String info; //Texto informativo
        //Retorna, caso os campos estejam inválidos
        if (!validarCampos() || !validarCodigo()) {
            return;
        }
        //Criação dos objetos
        Construcao co;
        Forro fo;
        Parede pa;
        //Construção
        co = new Construcao();
        co.setCodConstrucao(Integer.parseInt(txt_id.getText()));
        co.setDescricao(txt_descricao.getText());
        co.setDetalhes(txt_detalhes.getText());
        co.setQualidade(Integer.parseInt(txt_qualidade.getText()));
        co.setXdead(Boolean.FALSE);
//co.setItems(null);
        co.setMaterials(null);
        //Caso forro
        if (op_forro.isSelected()) {
            fo = new Forro();
            fo.setCodConstrucao(Integer.parseInt(txt_id.getText()));
            fo.setEhRf(chk_rf.isSelected());
            fo.setEhRu(chk_ru.isSelected());
            fo.setEhSt(chk_st.isSelected());
            fo.setXdead(Boolean.FALSE);
            fo.setConstrucao(co);
            co.setForro(fo);
            co.setParede(null);
            //Exclusão de forro
            res = controle.excluirForro(fo);
            //Caso parede
        } else {
            pa = new Parede();
            pa.setCodConstrucao(Integer.parseInt(txt_id.getText()));
            pa.setMontante(BigDecimal.valueOf(Double.parseDouble(txt_montante.getText())));
            pa.setAlturaLimite(BigDecimal.valueOf(Double.parseDouble(txt_alturaLim.getText())));
            pa.setEhRf(chk_rf.isSelected());
            pa.setEhRu(chk_ru.isSelected());
            pa.setEhSt(chk_st.isSelected());
            pa.setXdead(Boolean.FALSE);
            pa.setConstrucao(co);
            co.setParede(pa);
            co.setForro(null);
            //Exclusão de parede
            res = controle.excluirParede(pa);
        }
        //Resultado
        if (res) {
            info = "Construção excluída com sucesso";
        } else {
            info = "Não foi possível excluir construção";
        }
        exibirAlerta(info);
        //Volta ao estado inicial
        if (res) {
            resetarCampos();
        }
    }//GEN-LAST:event_btn_excluirActionPerformed
    /**
     * Retorna os campos e botões aos respectivos estados iniciais
     */
    private void resetarCampos() {
        txt_alturaLim.setText("");
        txt_descricao.setText("");
        txt_detalhes.setText("");
        txt_id.setText("");
        txt_montante.setText("");
        txt_qualidade.setText("");
        chk_rf.setSelected(false);
        chk_ru.setSelected(false);
        chk_st.setSelected(false);
        op_parede.setSelected(false);
        op_forro.setSelected(false);
        habilitarParede(false);
        habilitarAlteravel(false);
    }

    /**
     * Define se os campos pertinentes à construção do tipo parede estarão
     * habilitados
     *
     * @param value Valor booleano de decisão
     */
    private void habilitarParede(boolean value) {
        txt_alturaLim.setEditable(value);
        txt_montante.setEditable(value);
    }

    /**
     * Define se as opções de alteração e exclusão pertinentes à construção
     * estarão habilitados
     *
     * @param value Valor booleano de decisão
     */
    private void habilitarAlteravel(boolean value) {
        btn_alterar.setEnabled(!value);
        btn_excluir.setEnabled(!value);
    }

    /**
     * Valida campos de dados (exceto o código) da construção
     *
     * @return true, caso seja válido<br/>false, caso não seja
     */
    private boolean validarCampos() {
        if (txt_descricao.getText().equals("")) {
            exibirAlerta("Preencha a descrição.");
            return false;
        }
        if (txt_detalhes.getText().equals("")) {
            exibirAlerta("Preencha os detalhes.");
            return false;
        }
        if (txt_qualidade.getText().equals("")) {
            exibirAlerta("Preencha a pontuação de qualidade.");
            return false;
        }
        try {
            Integer.parseInt(txt_qualidade.getText());
        } catch (NumberFormatException ex) {
            exibirAlerta("Preencha a qualidade limite corretamente.\nUse somente números.");
            return false;
        }
        if (!(chk_rf.isSelected() || chk_ru.isSelected() || chk_st.isSelected())) {
            exibirAlerta("Selecione ao menos um tipo de proteção.");
            return false;
        }

        if (txt_id.getText().equals("")) {
            exibirAlerta("Preencha a pontuação de qualidade.");
            return false;
        }

        if (txt_montante.getText().equals("") && op_parede.isSelected()) {
            exibirAlerta("Preencha a montante limite.");
            return false;
        }
        try {
            if (op_parede.isSelected()) {
                Double.parseDouble(txt_montante.getText());
            }
        } catch (NumberFormatException ex) {
            exibirAlerta("Preencha a montante corretamente.\nUtilize ponto como separador decimal.");
            return false;
        }
        if (txt_alturaLim.getText().equals("") && op_parede.isSelected()) {
            exibirAlerta("Preencha a altura limite.");
            return false;
        }
        try {
            if (op_parede.isSelected()) {
                Double.parseDouble(txt_alturaLim.getText());
            }
        } catch (NumberFormatException ex) {
            exibirAlerta("Preencha a altura limite corretamente.\nUtilize ponto como separador decimal.");
            return false;
        }
        return true;
    }

    /**
     * Valida código de construção, vereficando também se já existe
     *
     * @return
     */
    private boolean validarCodigo() {
        Forro fo;
        Parede pa;
        if (txt_id.getText().equals("")) {
            exibirAlerta("Preencha o ID construção.");
            return false;
        }
        try {
            Integer.parseInt(txt_id.getText());
        } catch (NumberFormatException ex) {
            exibirAlerta("Preencha o ID da construção corretamente.\nUse somente números.");
            return false;
        }
        fo = controle.buscarForro(txt_id.getText());
        pa = controle.buscarParede(txt_id.getText());
        if (fo == null && pa == null) {
            exibirAlerta("Construção não encontrada.\nID de busca: " + txt_id.getText());
            return false;
        }
        return true;
    }

//    private class ActionHabilitarParede implements ChangeListener<Toggle> {
//
//        @Override
//          public void changed(ObservableValue<? extends Toggle> observable, Toggle oldValue, Toggle newValue) {
//            if (grp_construcao.getSelectedToggle() != null) {
//                if (grp_construcao.getSelectedToggle().equals(op_parede)) {
//                    habilitarParede(true);
//                } else {
//                    habilitarParede(false);
//                }
//            }
//        }
//    }
    /**
     * Exibe uma mensagem de alerta
     *
     * @param txt Texto do corpo a ser exibido no conteúdo
     */
//    
    private void exibirAlerta(String txt) {
        JOptionPane.showMessageDialog(null, txt);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TConstrucao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TConstrucao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TConstrucao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TConstrucao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TConstrucao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_alterar;
    private javax.swing.JButton btn_excluir;
    private javax.swing.JButton btn_limpar;
    private javax.swing.JButton btn_procurar;
    private javax.swing.JButton btn_sair;
    private javax.swing.JButton btn_salvar;
    private javax.swing.JCheckBox chk_rf;
    private javax.swing.JCheckBox chk_ru;
    private javax.swing.JCheckBox chk_st;
    private javax.swing.JLabel img_construcao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton op_forro;
    private javax.swing.JRadioButton op_parede;
    private javax.swing.JPanel pnl_encontra;
    private javax.swing.JPanel pnl_protecao;
    private javax.swing.JPanel pnl_tipo;
    private javax.swing.JTextField txt_alturaLim;
    private javax.swing.JTextField txt_descricao;
    private javax.swing.JTextArea txt_detalhes;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_montante;
    private javax.swing.JTextField txt_qualidade;
    // End of variables declaration//GEN-END:variables
}
